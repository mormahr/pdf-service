name: CI
on:
  push

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: mormahr/pdf-service
          tag-sha: false
          tag-custom: ${{ github.sha }}
          label-custom: |
            org.opencontainers.image.vendor=Moritz Mahringer

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          build-args: GITHUB_SHA=${{ github.sha }}
          cache-from: type=registry,ref=mormahr/pdf-service:latest
          cache-to: type=inline
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

  test:
    runs-on: ubuntu-20.04
    needs:
      - build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Prepare coverage
        run: |
          mkdir coverage
          chmod 777 coverage

      - name: Run tests
        uses: addnab/docker-run-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          image: mormahr/pdf-service:${{ github.sha }}
          options: -v ${{ github.workspace }}/coverage:/usr/src/app/coverage
          run: |
            python -m pytest \
              -rA \
              --cov=pdf_service \
              --cov-report term \
              --cov-report html:coverage/cov_html \
              --cov-report xml:coverage/cov.xml \
              --cov-report annotate:coverage/cov_annotate

      - name: Upload coverage report
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ github.workspace }}/coverage/cov.xml
          flags: unit
          name: unit
          fail_ci_if_error: true
          verbose: true

  release:
    runs-on: ubuntu-20.04
    needs:
      - build
      - test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag and push existing image as :latest
        run: |
          docker pull mormahr/pdf-service:${{ github.sha }}
          docker tag mormahr/pdf-service:${{ github.sha }} mormahr/pdf-service:latest
          docker push mormahr/pdf-service:latest
